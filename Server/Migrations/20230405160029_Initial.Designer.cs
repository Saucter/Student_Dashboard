// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using blazorTestApp.Server.Controllers;

#nullable disable

namespace DashboardProject.Server.Migrations
{
    [DbContext(typeof(Database))]
    [Migration("20230405160029_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CLassesTeachers", b =>
                {
                    b.Property<int>("ClassTeachersid")
                        .HasColumnType("int");

                    b.Property<int>("TeacherClasesid")
                        .HasColumnType("int");

                    b.HasKey("ClassTeachersid", "TeacherClasesid");

                    b.HasIndex("TeacherClasesid");

                    b.ToTable("CLassesTeachers");
                });

            modelBuilder.Entity("Dashboard_Project.Shared.Entities.Admins", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("Dashboard_Project.Shared.Entities.CLasses", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("EnrollmentDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("GraduationDate")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.ToTable("Classes");
                });

            modelBuilder.Entity("Dashboard_Project.Shared.Entities.Executives", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Executives");
                });

            modelBuilder.Entity("Dashboard_Project.Shared.Entities.Grades", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("SubjectName")
                        .HasColumnType("int");

                    b.Property<int>("Subjectid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("Subjectid");

                    b.ToTable("Grades");
                });

            modelBuilder.Entity("Dashboard_Project.Shared.Entities.Students", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("BirthOfDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CandidateNumber")
                        .HasColumnType("int");

                    b.Property<int>("Classid")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("Classid");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("Dashboard_Project.Shared.Entities.Subjects", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int?>("Assignments")
                        .HasColumnType("int");

                    b.Property<int?>("Behaviour")
                        .HasColumnType("int");

                    b.Property<int?>("Classwork")
                        .HasColumnType("int");

                    b.Property<int?>("Exams")
                        .HasColumnType("int");

                    b.Property<int?>("Homework")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Teachersid")
                        .HasColumnType("int");

                    b.Property<int?>("Tests")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("Teachersid");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("Dashboard_Project.Shared.Entities.Teachers", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("Dashboard_Project.Shared.Entities.TeachersClasses", b =>
                {
                    b.Property<int>("TeacherID")
                        .HasColumnType("int");

                    b.Property<int>("ClassID")
                        .HasColumnType("int");

                    b.HasKey("TeacherID", "ClassID");

                    b.HasIndex("ClassID");

                    b.ToTable("TeachersClasses");
                });

            modelBuilder.Entity("CLassesTeachers", b =>
                {
                    b.HasOne("Dashboard_Project.Shared.Entities.Teachers", null)
                        .WithMany()
                        .HasForeignKey("ClassTeachersid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dashboard_Project.Shared.Entities.CLasses", null)
                        .WithMany()
                        .HasForeignKey("TeacherClasesid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Dashboard_Project.Shared.Entities.Grades", b =>
                {
                    b.HasOne("Dashboard_Project.Shared.Entities.Subjects", "Subject")
                        .WithMany()
                        .HasForeignKey("Subjectid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("Dashboard_Project.Shared.Entities.Students", b =>
                {
                    b.HasOne("Dashboard_Project.Shared.Entities.CLasses", "Class")
                        .WithMany("ClassStudents")
                        .HasForeignKey("Classid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Class");
                });

            modelBuilder.Entity("Dashboard_Project.Shared.Entities.Subjects", b =>
                {
                    b.HasOne("Dashboard_Project.Shared.Entities.Teachers", null)
                        .WithMany("TeacherSubjects")
                        .HasForeignKey("Teachersid");
                });

            modelBuilder.Entity("Dashboard_Project.Shared.Entities.TeachersClasses", b =>
                {
                    b.HasOne("Dashboard_Project.Shared.Entities.CLasses", "Class")
                        .WithMany("TeachersClasses")
                        .HasForeignKey("ClassID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dashboard_Project.Shared.Entities.Teachers", "Teacher")
                        .WithMany("TeachersAndClasses")
                        .HasForeignKey("TeacherID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Class");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("Dashboard_Project.Shared.Entities.CLasses", b =>
                {
                    b.Navigation("ClassStudents");

                    b.Navigation("TeachersClasses");
                });

            modelBuilder.Entity("Dashboard_Project.Shared.Entities.Teachers", b =>
                {
                    b.Navigation("TeacherSubjects");

                    b.Navigation("TeachersAndClasses");
                });
#pragma warning restore 612, 618
        }
    }
}
